


Синтаксис SQL:
1. DDL (Data Definition Language) - отвечает за определение данных
создать БД, удалить БД, создать/удалить таблицу и т.д.

2. DML (Data Manipulation Language) - отвечает за взаимодействие с табицами
вставка даннх в таблицу, выбор данных из таблиы, обновленеие данных из таблицы, удаление данных из таблицы

3. DCL (Data Control Language) - пдминистрирование БД
создание/удаление пользователей, назначение прав и тд.

в каждый раздел входят свои команды

root пользователя не используем для поключения к БД, поэтому создаем нового

Создание нового пользователя:
CREATE USER 'ИМЯ_ПОЛЬЗОВАТЕЛЯ'@'localhost' IDENTIFIED BY 'паролль' - это команда идет на сервак

'localhost'-адрес сервера 

CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'pass'; - создлаем нового пользователя

GRANT ALL ON *.* TO 'newuser'@'localhost'; - разрешаем пользователю newuser использовать БД и таблицы

exit в консоли

mysql -u newuser -p ////// команда для входа новым пользователем


DDL
создать базу данных
create database name;

удалить БД
drop databasename

ваыбор БД
use имя_БД




создание таблицы:

CREATE TABLE IF NOT EXIST имя_таблицы(
	`id` INT NOT NULL PRIMARY KEY AUTO_INCTREMENT,
	`login`VARCHAR(50) NOT NULL,
	`age` INT NOT NULL,
	или так PRIMARY KEY(`id`)
) ENGINE=InnoDB; - указываем движок таблицы (отвечает за способ хранения данных)

Движки:
InnoDB - быстрое извлечение
MyISAM - добавление и изменеине данных
Arhive - 
Memory - хранение в оперативке сервера(быстрое выполнение, для времянных данных)
Blachhole - данные не хранит для отладки

Вставка
INSERT INTO название_таблицы(назавание столбцов);
INSERT INTO название_таблицы(назавание столбцов);
INSERT INTO название_таблицы(назавание столбцов);
///////////////////////////////////////////////////////////////////////////
Обновление записи

update название_таблицы SET login='newLogin' WHERE id=2; (например для id 2 меняем логин на newLogin);
///////////////////////////////////////////////////

удаление записи
DELETE FROM user WHERE id=5;
//////////////////////////////////////////////////////////////////
выбор данных
SELECT имена_столбцов FROM имя_таблицы WHERE условие;


SELECT * FROM user;

SELECT login,age FROM user;
///////////////////////////////////////////////////////////

выборка строк по определенным критериям (типо фильтр)

SELECT * FROM user WHERE 

операторы устловия  WHERE:
= <> <= >= !=

select * from SomeTable where age BETWEEN 18 and 90; от 18 до 90.

select * from SomeTable where age > 18 LIMIT 2;первые 2 значения по id или столько сколько укажешь

select * from SomeTable where login LIKE 'q%'; логин начинается с q (для примера)

select * from SomeTable where login LIKE '%e%'; внутри логина есть е

select * from SomeTable where login LIKE '_e%'; вторая буква е

объединение условий: AND OR NOT
select * from SomeTable where условие1 AND условие2 и тд (можно написать сколько угодно операторов)
select * from SomeTable where условие1 OR условие2 и тд
select * from SomeTable where условие1 NOT условие2 и тд (вернет записи для которых условие не выполняется)
///////////////////////////////////////////////////


сортировка по возрастанию и убыванию - посмотреть дома



















